server:
  port: 8081
spring:
  application:
    name: "solicitudes"
  devtools:
    add-properties: false
  r2dbc:
    url: "r2dbc:postgresql://localhost:5432/sjbd"
    username: "postgres"
    password: "admin"
  sql:
    init:
      mode: "always"
  profiles:
    include: null
management:
  endpoints:
    web:
      exposure:
        include: "health,prometheus"
  endpoint:
    health:
      probes:
        enabled: true
  health:
    circuitbreakers:
      enabled: true
cors:
  allowed-origins: "http://localhost:4201,http://localhost:8081"
intraron:
  security:
    jwt:
      secret-key: "d5a3c2e1f4b5a6c7d8e9f0a1b2c3d4e5f6a7b8c9d0e1f2a3b4c5d6e7f8a9b0c1" # Clave base64
      expiration-in-ms: 900000 # 15 minutos
  internal:
    service-api-key: "0c0e78f65e2b4f9a8d1c9e4a3c2b1a0f9e8d7c6b5a4d3e2f1g9h8i7j6k5l4m3n"
  auth-service:
    base-url: "http://localhost:8080"
adapter:
  restconsumer:
    timeout: 5000
    url: "http://localhost:8080"
resilience4j:
  circuitbreaker:
    instances:
      testGet:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
      testPost:
        registerHealthIndicator: true
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: "2s"
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        minimumNumberOfCalls: 10
        waitDurationInOpenState: "10s"
